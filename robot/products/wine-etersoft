#!/bin/sh -x
##
#  Korinf project
#
#  Publish WINE@Etersoft product for client by task file
#
#  Copyright (c) Etersoft <http://etersoft.ru> 2006, 2007, 2009
#  Copyright (c) Vitaly Lipatov <lav@etersoft.ru> 2006, 2007, 2009
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.

#  You should have received a copy of the GNU Affero General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
##

# Выполняет сборку по первому заказу в списке
# Отправляет на реальный адрес только с параметром --real /путь
# Также отладку можно включить, создав файл arobot.sh.debug
# (c) Etersoft
# 08.06.2006, 09.06.06, 28.02.07, 09.03.07, 15.12.07, 2008
# FIXME: если в имени запятая, разделяет на два адреса
#



# Function instrKRF() search string $2 in string $1.
# Return value - integer in [0..255]
# 0 - true
# NOT 0 - false
#

instrKRF()
{
        echo "$1" | grep -q "$2"
}


prepare_wine_etersoft_license()
{
	assert_var PROJECTVERSION TYPE_LICENSE PRODUCT AROBOTDIR

	if [ "$PROJECTVERSION" = "1.0.11" ] ; then
		[ "$TYPE_LICENSE" = "DemoTerminal" ] && TYPE_LICENSE="Demo"
	fi

	# HACK for WINE@Etersoft Enterprise
	if echo "$COMPONENTNAME" | grep -q "Enterprise" ; then
		PRODUCT="$PRODUCT Enterprise"
	fi

	LICENSE_name=`echo "$TYPE_LICENSE" | sed -e "s| ||g" | tr "[A-Z]" "[a-z]"`

	local DSAKEY=wine-etersoft-2.0.dsa

	# Тут же может быть testing в PROJECTVERSION, поэтому только его проверять нельзя
	# Обязательно нужно проверять на версию, потому что для WINE@Etersoft 2.0 мы отгружаем 1.0.12
	if echo "$PRODUCT" | grep -q "WINE@Etersoft 1\.0" || [ "$PROJECTVERSION" = "1.0.12" ] ; then
		DSAKEY=wine-etersoft.dsa
	fi
	
	
	create_license $1 $AROBOTDIR/dsa/$DSAKEY
}

# TARGETDIR - user download dir on the site
# TYPE - CAD/SQL/Network/Local/Network Lite/SQL Unique
prepare_wine_etersoft()
{
	# PRODUCT_name - sql/network/local
	PRODUCT_name=`echo "$TYPE" | sed -e "s| ||g" | tr A-Z a-z`

	# Можем стирать только каталог дистрибутива, а не весь
	test -e $FTPDIR && rm -rf $FTPDIR
	mkdir -p $FTPDIR/ $FTPDIR/extra

	echo >> $ALOGDIR/autobuild.report.log
	echo "$(date): Build $TYPE for $ETERREGNUM in $DIST" >> $ALOGDIR/autobuild.report.log

	check_and_refresh_component bin-wine $PVTLOCAL wine-etersoft-${PRODUCT_name}
	check_and_refresh_component bin-wine $PUBLOCAL/WINE wine-etersoft

	[ "$TYPE" = "School" ] || check_and_refresh_component bin-wine $PUBLOCAL/fonts fonts-ttf-ms

	# skip on FreeBSD
	if ! echo "$DIST" | grep -q "FreeBSD" ; then
		if [ "$PROJECTVERSION" != "1.0.11" ] ; then
			check_and_refresh_component bin-hasp $PUBLOCAL/HASP haspd
		fi

		[ "$TYPE" = "Local" ] || check_and_refresh_component bin-cifs $PUBLOCAL/CIFS etercifs
		[ "$TYPE" = "SchoolDIS" ] || check_and_refresh_component bin-wine $PUBLOCAL/WINE fonts-ttf-liberation
	fi

	# Get file list
	PRIVFILES=`find -L $PVTLOCAL/$DIST -maxdepth 1 -type f`
	PUB1FILES=`find -L $PUBLOCAL/WINE/$DIST -maxdepth 1 -type f`
	#PUB2FILES=`find -L $PUBLOCAL/fonts/$DIST -maxdepth 1 -type f`
	# CIFS
	PUB2FILES=`find -L $PUBLOCAL/CIFS/$DIST -maxdepth 1 -type f`
	# extra
	PUB3FILES=`find -L $PUBLOCAL/WINE/$DIST/extra -maxdepth 1 -type f`
	# HASP
	# TODO: copy haspd-modules to extra
	if [ "$PROJECTVERSION" != "1.0.11" ] ; then
		PUB4FILES=`find -L $PUBLOCAL/HASP/$DIST -maxdepth 1 -type f`
	else
		PUB4FILES=
	fi

	if [ "$TYPE" = "CAD" ] ; then
		# GL for CAD
		PUB5FILES=`find -L $PUBLOCAL/WINE/$DIST/extra -maxdepth 1 -type f -name "wine-etersoft-gl*"`
	else
		PUB5FILES=
	fi

	# Нужно скопировать файлы
	for i in $PRIVFILES $PUB1FILES $PUB2FILES $PUB4FILES $PUB5FILES; do
		# try create hard link firstly
		cp -fl $i $FTPDIR || cp -f $i $FTPDIR || fatal "Can't copy $i"
	done

	# Копируем дополнительные в extra
	for i in $PUB3FILES; do
		# try create hard link firstly
		cp -fl $i $FTPDIR/extra/ || cp -f $i $FTPDIR/extra/ || fatal "Can't copy $i"
	done

	prepare_wine_etersoft_license $FTPDIR/$LICENSEFILE

	# Ещё раз проверяем наличие обязательных пакетов
	# Check package files
	assert_present_package $FTPDIR wine-etersoft

	# FIXME: сделать простую проверку на систему
	# skip on FreeBSD
	if ! echo "$DIST" | grep -q "FreeBSD" ; then
		assert_present_package $FTPDIR haspd
		
		if ! $(instrKRF "$DIST" "ArchLinux") && ! $(instrKRF "$DIST" "Gentoo")
		then
			assert_present_package $FTPDIR haspd-modules
		fi

		if [ "$TYPE" != "Local" ] ; then
			assert_present_package $FTPDIR etercifs
		fi
		[ "$TYPE" = "SchoolDIS" ] || assert_present_package $FTPDIR fonts-ttf-liberation
	fi

	assert_present_package $FTPDIR wine-etersoft-${PRODUCT_name}


	# user will download it from separate place
	#assert_present_package $FTPDIR fonts-ttf-ms

	if [ "$TYPE" = "CAD" ] ; then
		assert_present_package $FTPDIR wine-etersoft-gl
	fi

	# вставляем регистрационный номер в readme и в каталог
	DOCS=$PVTLOCAL/../docs
	sed -e "s/XXXX-XXXX/$ETERREGNUM/g" <$DOCS/README_$TYPE.html >$FTPDIR/README.html || fatal "readme copying"
	sed -e "s/XXXX-XXXX/$ETERREGNUM/g" <$DOCS/license_${PRODUCT_name}_${LICENSE_name}.html >$FTPDIR/license.html || fatal "license copying"
	cp -f $DOCS/${PRODUCT_name}_manual.html $FTPDIR/manual.html || fatal "manual copying"
}


# Ошибка: не ловятся ошибки отсюда
prepare_wine_etersoft_mail()
{
	local FILETO BETA NAME
	FILETO=$1
	>$FILETO
	NAME="$(get_dear_from_fio "$FULLNAME" "покупатель")"
	BETA=""
	# FIXME: is it used?
	if [ "$RELEASECANDIDAT" = "1" ] ; then
		BETA="
!! Это предварительная версия продукта, используйте её с осторожностью !!
!! Устанавливайте в повседневное использование только после проверки !!
!! Создавайте резервные копии !!
"
	fi

CIFSTEXT=""
if [ "$TYPE" != "Local" ] ; then
CIFSTEXT=" - пакет для обеспечения сетевого взаимодействия по протоколу CIFS с сервером
   SAMBA или Windows Server (etercifs) (и dkms-etercifs - только если нужен)
"
fi

if [ "$TYPE_LICENSE" = "Demo" ] || [ "$TYPE_LICENSE" = "DemoTerminal" ] ; then
	THANKTEXT="Благодарим Вас за внимание к нашему продукту."
else
	THANKTEXT="Благодарим Вас за покупку!"
fi

	cat >>$FILETO <<EOF
${DEAR} ${NAME}!

Ваш заказ по сборке для системы ${TEXTDIST} Продукта
${PRODUCT}
(релиз $PROJECTVERSION) выполнен.
${BETA}
Регистрационный номер Продукта: ${ETERREGNUM}.

Всегда можно заказать сборку ещё раз по адресу http://sales.etersoft.ru/product/${ETERREGNUM}/email=${MAILTO}

Для получения Продукта необходимо скачать файлы по приведённым ссылкам, в их числе:
 - пакеты Продукта (wine-etersoft, wine-etersoft-$PRODUCT_name);
 - файл лицензии $LICENSEFILE;
 - документацию (файл manual.html);
 - пакеты с драйверами и менеджерами лицензий для аппаратных ключей защиты
   HASP 4/HL/SRM, Smartkey 3 Eutron и SafeNet Sentinel (пакет haspd для HASP USB и haspd-modules, dkms-aksparlnx для HASP LPT);
 - пакет со свободными шрифтами Liberation (fonts-ttf-liberation)
   Во многих дистрибутивах он уже есть (в Ubuntu называется ttf-liberation),
   ставить наш вариант не обязательно.
$CIFSTEXT
ОБРАТИТЕ ВНИМАНИЕ!
Файл лицензии $LICENSEFILE необходимо расположить в каталоге /etc/wine, ~/.wine или
C:\WINDOWS\INF и проверить права на его чтение пользователями.
EOF
	printURL "$FTPDIR" "$DOWNLOADDIR/$TYPE-$PROJECTVERSION/$DIST" $FTPDIR/$LICENSEFILE >>$FILETO || fatal "Error with $LICENSEFILE "

if [ "$TYPE" != "School" ] ; then
	cat >>$FILETO <<EOF

Для полного соответствия шрифтов в программах
можно скачать и установить пакет fonts-ttf-ms,
содержащий шрифты MS Core Fonts:
$PUBDOWNLOAD1FONTS
EOF
fi
	cat >>$FILETO <<EOF

Ссылки для скачивания файлов экземпляра Продукта и сопутствующих файлов:
EOF
	printURL "$FTPDIR" "$DOWNLOADDIR/$TYPE-$PROJECTVERSION/$DIST" `find -L $FTPDIR -maxdepth 1 -type f | sort | grep -v $LICENSEFILE` >>$FILETO || fatal "Error with files (files are missed) "

	cat >>$FILETO <<EOF
(действительны в течение 4 суток)

Вы можете напрямую зайти в каталог, чтобы загрузить файлы открытой и закрытой части:
	${DOWNLOADDIR/$MPROTO:/$RPROTO:}/$TYPE-$PROJECTVERSION/$DIST
	${DOWNLOADDIR}/$TYPE-$PROJECTVERSION/$DIST
EOF

if [ "$TYPE" = "School" ] ; then
	cat >>$FILETO <<EOF

Обязательно ознакомьтесь с известными проблемами в текущей сборке:
http://wiki.etersoft.ru/WINE/knownbugs

Ответы на частые вопросы смотрите на страницах 
http://kb.etersoft.ru/WINE@Etersoft_School/FAQ
и
http://etersoft.ru/wine/faq

Прочитайте документацию https://winehq.org.ru/WINE@Etersoft

По вопросам использования продукта пишите новое письмо
на wine-school@etersoft.ru,
указав в теме письма регистрационный номер.

Пожалуйста, отвечайте на это письмо только
при возникновении затруднений со скачиванием файлов.

Благодарим Вас за использование нашего продукта.
EOF
else
	cat >>$FILETO <<EOF

Обязательно ознакомьтесь с известными проблемами в текущей сборке:
http://wiki.etersoft.ru/WINE/knownbugs

Ответы на частые вопросы смотрите на http://etersoft.ru/wine/faq

Прочитайте документацию https://winehq.org.ru/WINE@Etersoft

По вопросам использования продукта пишите новое письмо
на support@etersoft.ru,
указав в теме письма регистрационный номер.

Пожалуйста, отвечайте на это письмо только
при возникновении затруднений со скачиванием файлов.

$THANKTEXT
EOF
fi
	cat >>$FILETO <<EOF

-- 
Команда разработчиков
Etersoft, 2016
EOF
}


# TODO: compare with prepare_license_mail
prepare_wine_etersoft_license_mail()
{
	local FILETO BETA NAME
	FILETO=$1
	>$FILETO
	NAME="$(get_dear_from_fio "$FULLNAME" "покупатель")"
	BETA=""

if [ "$TYPE_LICENSE" = "Demo" ] || [ "$TYPE_LICENSE" = "DemoTerminal" ] ; then
	THANKTEXT="Благодарим Вас за внимание к нашему продукту."
else
	THANKTEXT="Благодарим Вас за покупку!"
fi

	cat >>$FILETO <<EOF
${DEAR} ${NAME}!

Вы заказывали лицензию для Продукта
${PRODUCT} (релиз $PROJECTVERSION)
с регистрационным номером ${ETERREGNUM}.

Файл лицензии можно скачать по следующей ссылке:
EOF

	printURL $FTPDIR $DOWNLOADDIR/$TYPE-$PROJECTVERSION $FTPDIR/$LICENSEFILE >>$FILETO || fatal "Error with license (files are missed) "

cat >>$FILETO <<EOF

Файл лицензии $LICENSEFILE необходимо расположить в одном из следующих каталогов:
/etc/wine, ~/.wine или C:\WINDOWS\INF и проверить права на его чтение пользователями.

Всегда можно заказать сборку или файл лицензии ещё раз по адресу http://sales.etersoft.ru/product/${ETERREGNUM}/email=${MAILTO}

Пожалуйста, отвечайте на это письмо только
при возникновении затруднений с файлом лицензии.

$THANKTEXT
EOF

	cat >>$FILETO <<EOF

-- 
Команда разработчиков
Etersoft, 2016
EOF
}



mail_wine_etersoft_license()
{
	FTPDIR=$TARGETDIR/$TYPE-$PROJECTVERSION

	TARGETDIR="/var/ftp/pub/download/WINE@Etersoft/$TARGETDIRNAME"
	DOWNLOADDIR="$MPROTO://$DOWNLOADDOMAIN/W@E/$TARGETDIRNAME"

	prepare_wine_etersoft_license $FTPDIR/$LICENSEFILE

	TMPMAIL=$(make_temp_file)
	prepare_wine_etersoft_license_mail $TMPMAIL || fatal "Can't prepare letter"

	# Для отправки писем обязательно нужна локаль!
	export LC_ALL=ru_RU.UTF-8
	cat $TMPMAIL | mutt "${FULLMAILTO}" -b "sales-track@etersoft.ru" -s "$ETERREGNUM: Лицензия для продукта $COMPONENTNAME" || fatal "Can't send"
	rm -f $TMPMAIL
}


build_wine_etersoft()
{
	PROJECTNAME="WINE@Etersoft"
	LICENSEFILE="wine-etersoft.lic"
	VERNAME=$PROJECTNAME/$PROJECTVERSION
	TYPE="$(get_product_type "$COMPONENTNAME")"

	TARGETDIR="/var/ftp/pub/download/WINE@Etersoft/$TARGETDIRNAME"
	DOWNLOADDIR="$MPROTO://$DOWNLOADDOMAIN/W@E/$TARGETDIRNAME"

	PUBLOCAL="/var/ftp/pub/Etersoft/$VERNAME"

	if [ -n "$LICENSEONLY" ] ; then
		mail_wine_etersoft_license
		return
	fi

	# Use real path if possible
	if [ -L "$PUBLOCAL" ] ; then
		PUBLOCAL=`readlink -f "$PUBLOCAL"`
		VERNAME=$PROJECTNAME/`basename $PUBLOCAL`
	fi

	# Not: use original project version (other path, not pub)
	PVTLOCAL="/var/ftp/pvt/Etersoft/$PROJECTNAME/$PROJECTVERSION/WINE-$TYPE"

	# Lav 28.06.11: skip checking for previous built one
	#if [ ! -d "$PUBLOCAL/WINE/$DIST" ] ; then
	#	warning "System $DIST not supported for build ($PUBLOCAL/WINE/$DIST does not exist)"
	#	do_broken
	#fi

	TEXTDIST=$DIST
	# Check for linked system (собираем для основной системы),
	if [ -L "$PUBLOCAL/WINE/$DIST" ]; then
		local NEWDIST
		NEWDIST=`readlink $PUBLOCAL/WINE/$DIST | sed -e "s|\.\./||g"`
		# Если из ссылки не пропала архитектура
		if [ "${DIST/x86_64/}" = "${NEWDIST/x86_64/}" ] ; then
			DIST=$NEWDIST
			TEXTDIST="$TEXTDIST (фактически сборка выполнена для $DIST)"
		fi
	fi
	check_dist $DIST
	mkdir -p "$PVTLOCAL/$DIST"
	
	PUBDOWNLOAD1FONTS="$MPROTO://$DOWNLOADDOMAIN/pub/Etersoft/$VERNAME/fonts/$DIST"
	#[ -d "$PUBLOCAL/fonts/$DIST/" ] || fatal "Can't locate fonts dir fonts/$DIST"

	export FTPDIR=$TARGETDIR/$TYPE-$PROJECTVERSION/$DIST

	prepare_wine_etersoft

	TMPMAIL=$(make_temp_file)
	prepare_wine_etersoft_mail $TMPMAIL || fatal "Can't prepare letter"

	# Для отправки писем обязательно нужна локаль!
	export LC_ALL=ru_RU.UTF-8
	cat $TMPMAIL | mutt "${FULLMAILTO}" -b "sales-track@etersoft.ru" -s "$ETERREGNUM: Сборка $COMPONENTNAME для ${TEXTDIST}" || fatal "Can't send"
	rm -f $TMPMAIL
}


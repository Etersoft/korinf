#!/bin/sh -x
##
#  Korinf project
#
#  Publish WINE@Etersoft product for client by task file
#
#  Copyright (c) Etersoft <http://etersoft.ru> 2006, 2007, 2009
#  Copyright (c) Vitaly Lipatov <lav@etersoft.ru> 2006, 2007, 2009
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.

#  You should have received a copy of the GNU Affero General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
##

# Выполняет сборку по первому заказу в списке
# Отправляет на реальный адрес только с параметром --real /путь
# Также отладку можно включить, создав файл arobot.sh.debug
# (c) Etersoft
# 08.06.2006, 09.06.06, 28.02.07, 09.03.07, 15.12.07, 2008
# FIXME: если в имени запятая, разделяет на два адреса
#



# Function instrKRF() search string $2 in string $1.
# Return value - integer in [0..255]
# 0 - true
# NOT 0 - false
#

instrKRF()
{
        echo "$1" | grep -q "$2"
}


prepare_wine_etersoft_license()
{
	assert_var PROJECTVERSION TYPE_LICENSE PRODUCT AROBOTDIR

	#if [ "$PROJECTVERSION" = "1.0.11" ] ; then
	#	[ "$TYPE_LICENSE" = "DemoTerminal" ] && TYPE_LICENSE="Demo"
	#fi

	# HACK for WINE@Etersoft Enterprise
	if echo "$COMPONENTNAME" | grep -q "Enterprise" ; then
		PRODUCT="$PRODUCT Enterprise Network"
	fi

	LICENSE_name=`echo "$TYPE_LICENSE" | sed -e "s| ||g" | tr "[A-Z]" "[a-z]"`

	# use N.x by PROJECTVERSION
	local FIRSTCHAR="$(echo "$PROJECTVERSION" | cut -c1)"
	local DSAKEY=wine-etersoft-$FIRSTCHAR.x.dsa

	# FIXME: Тут же может быть testing в PROJECTVERSION, поэтому только его проверять нельзя
	local KEYPATH=$AROBOTDIR/dsa/$DSAKEY
	[ -s "$KEYPATH" ] || fatal "missed $KEYPATH" #KEYPATH=$AROBOTDIR/dsa/ine-etersoft-5.x.dsa

	# Обязательно нужно проверять на версию, потому что для WINE@Etersoft 2.0 мы отгружаем 1.0.12
	#if echo "$PRODUCT" | grep -q "WINE@Etersoft 1\.0" || [ "$PROJECTVERSION" = "1.0.12" ] ; then
	#	DSAKEY=wine-etersoft.dsa
	#fi

	create_license $1 $KEYPATH
}

# TARGETDIR - user download dir on the site
# TYPE - CAD/SQL/Network/Local/Network Lite/SQL Unique
prepare_wine_etersoft()
{
	# PRODUCT_name - sql/network/local
	PRODUCT_name=`echo "$TYPE" | sed -e "s| ||g" | tr A-Z a-z`

	# Можем стирать только каталог дистрибутива, а не весь
	test -e $FTPDIR && rm -rf $FTPDIR
	mkdir -p $FTPDIR/ $FTPDIR/extra

	echo >> $ALOGDIR/autobuild.report.log
	echo "$(date): Build $TYPE for $ETERREGNUM in $DIST" >> $ALOGDIR/autobuild.report.log

	WINEPRODUCT=wine-etersoft
	WINEPRODUCT32=wine32-etersoft
	WINETRICKS=$WINEPRODUCT-winetricks

	if echo "$PROJECTVERSION" | grep "^[12456]" || [ "$PROJECTVERSION" = "7.13" ]  ; then
		WINEPRODUCT=wine
		WINEPRODUCT32=wine32
		WINETRICKS=winetricks
	fi

	check_and_refresh_component bin-wine $PUBLOCAL/WINE wine-etersoft
	check_and_refresh_component bin-wine $PVTLOCAL wine-etersoft-${PRODUCT_name}

	if echo "$PROJECTVERSION" | grep "^[567]" ; then
		check_and_refresh_component bin-wine $PUBLOCAL/WINE $WINEPRODUCT-gecko
		check_and_refresh_component bin-wine $PUBLOCAL/WINE $WINEPRODUCT-mono
		check_and_refresh_component bin-wine $PUBLOCAL/WINE $WINEPRODUCT-grdwine
		check_and_refresh_component bin-wine $PUBLOCAL/WINE $WINETRICKS
	fi


	DIST32=''
	if rhas "$PROJECTVERSION" "^[7]" && rhas "$DIST" "^x86_64" ; then
		DIST32=$(echo "$DIST" | sed -e"s|x86_64/||")
		#
		#( DIST=$DIST32 check_and_refresh_component bin-wine $PVTLOCAL wine-etersoft-${PRODUCT_name} ) || fatal "Can't build 32 bit part"
		( DIST=$DIST32 check_and_refresh_component bin-wine $PUBLOCAL/WINE wine-etersoft '' wine32-etersoft ) || fatal "Can't build 32 bit part"
		( DIST=$DIST32 check_and_refresh_component bin-wine $PUBLOCAL/WINE $WINEPRODUCT-grdwine '' $WINEPRODUCT32-grdwine ) || fatal "Can't build 32 bit part"
	fi

	#[ "$TYPE" = "School" ] || check_and_refresh_component bin-wine $PUBLOCAL/fonts fonts-ttf-ms

	check_and_refresh_component bin-hasp $PUBLOCAL/HASP haspd

	#[ "$TYPE" = "Local" ] || check_and_refresh_component bin-cifs $PUBLOCAL/CIFS etercifs

	#[ "$TYPE" = "SchoolDIS" ] || check_and_refresh_component bin-wine $PUBLOCAL/WINE fonts-ttf-liberation

	# Get file list
	PRIVFILES=`find -L $PVTLOCAL/$DIST -maxdepth 1 -type f`
	PUB1FILES=`find -L $PUBLOCAL/WINE/$DIST -maxdepth 1 -type f`
	if [ -n "$DIST32" ] ; then
		PUB1FILES32=`find -L $PUBLOCAL/WINE/$DIST32 -maxdepth 1 -type f | grep -E "wine32-(etersoft|grdwine|etersoft-grdwine)[-_][0-9]"`
		# extra
		PUB3FILES32=`find -L $PUBLOCAL/WINE/$DIST32/extra -maxdepth 1 -type f | grep "wine32[-_]"`
		# HACK: pack only i586 private
		#PRIVFILES=`find -L $PVTLOCAL/$DIST32 -maxdepth 1 -type f`
	else
		PUB1FILES32=''
		PUB3FILES32=''
	fi

	# fonts
	#PUB2FILES=`find -L $PUBLOCAL/fonts/$DIST -maxdepth 1 -type f`

	# CIFS
	#[ "$TYPE" = "Local" ] || PUB2FILES=`find -L $PUBLOCAL/CIFS/$DIST -maxdepth 1 -type f`
	# extra
	PUB3FILES=`find -L $PUBLOCAL/WINE/$DIST/extra -maxdepth 1 -type f`
	# HASP
	# TODO: copy haspd-modules to extra
	PUB4FILES=`find -L $PUBLOCAL/HASP/$DIST -maxdepth 1 -type f`

	if [ "$TYPE" = "CAD" ] ; then
		# GL for CAD
		PUB5FILES=`find -L $PUBLOCAL/WINE/$DIST/extra -maxdepth 1 -type f -name "wine-etersoft-gl*"`
	else
		PUB5FILES=
	fi

	check_and_refresh_package $KORINFLOCAL eepm
	PUB6FILES=`find -L $KORINFLOCAL/$DIST -maxdepth 1 -type f -name "eepm[_-]3*"`

	# Нужно скопировать файлы
	for i in $PRIVFILES $PUB1FILES $PUB1FILES32 $PUB2FILES $PUB4FILES $PUB5FILES $PUB6FILES; do
		[ -n "$i" ] || fatal "Empty source filename"
		# skip if already exists (usually, skip noarch packages)
		[ -s "$FTPDIR/$(basename $i)" ] && continue
		# try create hard link firstly
		cp -fl $i $FTPDIR ||  cp -fl $i $FTPDIR || cp -f $i $FTPDIR || fatal "Can't copy $i"
	done

	# Копируем дополнительные в extra
	for i in $PUB3FILES $PUB3FILES32; do
		[ -n "$i" ] || fatal "Empty source filename"
		# try create hard link firstly
		# some gluster problem?
		# 
		# cp: cannot create hard link '/var/ftp/pub/download/WINE@Etersoft/B7A8-huphoaxaet/Local-2.1/x86_64/Ubuntu/18.04/wine-etersoft_2.1.4-eter37ubuntu_i386.deb' to '/var/ftp/pub/Etersoft/WINE@Etersoft/2.1.4/WINE/x86_64/Ubuntu/18.04/wine-etersoft_2.1.4-eter37ubuntu_i386.deb': No space left on device
		# cp: '/var/ftp/pub/Etersoft/WINE@Etersoft/2.1.4/WINE/x86_64/Ubuntu/18.04/wine-etersoft_2.1.4-eter37ubuntu_i386.deb' and '/var/ftp/pub/download/WINE@Etersoft/B7A8-ieshaimaec/Local-2.1/x86_64/Ubuntu/18.04/wine-etersoft_2.1.4-eter37ubuntu_i386.deb' are the same file
		cp -fl $i $FTPDIR/extra/ || cp -fl $i $FTPDIR/extra/ || cp -f $i $FTPDIR/extra/ || fatal "Can't copy $i"
	done

	prepare_wine_etersoft_license $FTPDIR/$LICENSEFILE

	# FIXME: Не можем проверить, что у нас с файлами для разных архитектур

	# Ещё раз проверяем наличие обязательных пакетов
	# Check package files
	assert_present_package $FTPDIR wine-etersoft
	if [ -n "$DIST32" ] ; then
		assert_present_package $FTPDIR wine32-etersoft
		assert_present_package $FTPDIR $WINEPRODUCT32-grdwine
	fi

	# FIXME: сделать простую проверку на систему
	# skip on FreeBSD
	if ! echo "$DIST" | grep -q "FreeBSD" ; then
		assert_present_package $FTPDIR haspd
		
		#if ! $(instrKRF "$DIST" "ArchLinux") && ! $(instrKRF "$DIST" "Gentoo")
		#then
		#	assert_present_package $FTPDIR haspd-modules
		#fi

		#if [ "$TYPE" != "Local" ] ; then
		#	assert_present_package $FTPDIR etercifs
		#fi
		#[ "$TYPE" = "SchoolDIS" ] || assert_present_package $FTPDIR fonts-ttf-liberation
	fi

	if rhas "$PROJECTVERSION" "^[567]" ; then
		assert_present_package $FTPDIR eepm

		assert_present_package $FTPDIR $WINEPRODUCT-gecko
		assert_present_package $FTPDIR $WINEPRODUCT-mono
		assert_present_package $FTPDIR $WINEPRODUCT-grdwine
		assert_present_package $FTPDIR $WINETRICKS
	fi

	# HACK
	#if [ -n "$DIST32" ] ; then
	#	( DIST=$DIST32 assert_present_package $FTPDIR wine-etersoft-${PRODUCT_name} )
	#else
	assert_present_package $FTPDIR wine-etersoft-${PRODUCT_name}
	#fi

	# user will download it from separate place
	#assert_present_package $FTPDIR fonts-ttf-ms

	if [ "$TYPE" = "CAD" ] ; then
		assert_present_package $FTPDIR wine-etersoft-gl
	fi

	# вставляем регистрационный номер в readme и в каталог
	DOCS=$PVTLOCAL/../docs
	sed -e "s/XXXX-XXXX/$ETERREGNUM/g" <$DOCS/README_$TYPE.html >$FTPDIR/README.html || fatal "readme copying"
	sed -e "s/XXXX-XXXX/$ETERREGNUM/g" <$DOCS/license_${PRODUCT_name}_${LICENSE_name}.html >$FTPDIR/license.html || fatal "license copying"
	# не пакуем документацию для новых версий
	if echo "$PROJECTVERSION" | grep "^[12]" ; then
		cp -f $DOCS/${PRODUCT_name}_manual.html $FTPDIR/manual.html || fatal "manual copying"
	fi

	# список файлов
	cd $FTPDIR/ || fatal "cd"
	md5sum *.* >$FTPDIR/wine-etersoft-install.md5 || fatal "file list"
	sha256sum *.* >$FTPDIR/wine-etersoft-install.sha256 || fatal "file list"
	cd - >/dev/null

	if [ -s $DOCS/wine-etersoft-install.sh ] ; then
		# скрипт установки
		sed -e "s|^URLRPM=|URLRPM=$DOWNLOADDIR/$TYPE-$PROJECTVERSION/$DIST|" <$DOCS/wine-etersoft-install.sh >$FTPDIR/wine-etersoft-install.sh || fatal "install script"
	fi

}


# Ошибка: не ловятся ошибки отсюда
prepare_wine_etersoft_mail()
{
	local FILETO BETA NAME
	FILETO=$1
	>$FILETO
	NAME="$(get_dear_from_fio "$FULLNAME" "покупатель")"
	BETA=""
	# FIXME: is it used?
	if [ "$RELEASECANDIDAT" = "1" ] ; then
		BETA="
!! Это предварительная версия продукта, используйте её с осторожностью !!
!! Устанавливайте в повседневное использование только после проверки !!
!! Создавайте резервные копии !!
"
	fi

CIFSTEXT=""
if [ "$TYPE" != "Local" ] ; then
CIFSTEXT=" - пакет для обеспечения сетевого взаимодействия по протоколу CIFS с сервером
   SAMBA или Windows Server (etercifs) (и dkms-etercifs - только если нужен)
"
fi

if [ "$TYPE_LICENSE" = "Demo" ] || [ "$TYPE_LICENSE" = "DemoTerminal" ] ; then
	THANKTEXT="Благодарим Вас за внимание к нашему продукту."
else
	THANKTEXT="Благодарим Вас за покупку!"
fi

	cat >>$FILETO <<EOF
${DEAR} ${NAME}!

Ваш заказ по сборке для системы ${TEXTDIST} Продукта
${PRODUCT}
(релиз $PROJECTVERSION) выполнен.
${BETA}
Регистрационный номер Продукта: ${ETERREGNUM}.

Всегда можно заказать сборку ещё раз по адресу https://sales.etersoft.ru/product/${ETERREGNUM}/email=${MAILTO}

Для получения Продукта скачайте файлы по приведённым ссылкам, в их числе:
 - пакеты Продукта (wine-etersoft, wine-etersoft-$PRODUCT_name);
 - файл лицензии $LICENSEFILE;
 - документацию (файл manual.html);
 - пакеты с драйверами и менеджером лицензий для аппаратных ключей защиты HASP HL (пакет haspd);
$CIFSTEXT
ОБРАТИТЕ ВНИМАНИЕ!
Файл лицензии $LICENSEFILE необходимо расположить в каталоге /etc/wine, ~/.wine или
C:\WINDOWS\INF и проверить права на его чтение пользователями.
EOF
	printURL "$FTPDIR" "$DOWNLOADDIR/$TYPE-$PROJECTVERSION/$DIST" $FTPDIR/$LICENSEFILE >>$FILETO || fatal "Error with $LICENSEFILE "

if false && [ "$TYPE" != "School" ] ; then
	cat >>$FILETO <<EOF

Для полного соответствия шрифтов в программах
можно скачать и установить пакет fonts-ttf-ms,
содержащий шрифты MS Core Fonts:
$PUBDOWNLOAD1FONTS
EOF
fi
	cat >>$FILETO <<EOF

Ссылки для скачивания файлов экземпляра Продукта и сопутствующих файлов:
EOF
	printURL "$FTPDIR" "$DOWNLOADDIR/$TYPE-$PROJECTVERSION/$DIST" `find -L $FTPDIR -maxdepth 1 -type f | sort | grep -v $LICENSEFILE` >>$FILETO || fatal "Error with files (files are missed) "

	cat >>$FILETO <<EOF
(действительны в течение 4 суток)

Вы можете напрямую зайти в каталог, чтобы загрузить файлы открытой и закрытой части:
	${DOWNLOADDIR}/$TYPE-$PROJECTVERSION/$DIST
EOF

if [ "$TYPE" = "School" ] ; then
	cat >>$FILETO <<EOF

Обязательно ознакомьтесь с известными проблемами в текущей сборке:
https://wiki.etersoft.ru/WINE/knownbugs

Ответы на частые вопросы смотрите на страницах 
https://kb.etersoft.ru/WINE@Etersoft_School/FAQ
и
https://etersoft.ru/wine/faq

Прочитайте документацию https://winehq.org.ru/WINE@Etersoft

По вопросам использования продукта пишите новое письмо
на wine-school@etersoft.ru,
указав в теме письма регистрационный номер.

Пожалуйста, отвечайте на это письмо только
при возникновении затруднений со скачиванием файлов.

Благодарим Вас за использование нашего продукта.
EOF
elif [ "$TYPE" = "Local" ] ; then
	cat >>$FILETO <<EOF

Обязательно ознакомьтесь с известными проблемами в текущей сборке:
http://wiki.etersoft.ru/WINE/knownbugs

Ответы на частые вопросы смотрите на https://etersoft.ru/wine/faq

Ознакомьтесь с документацией https://winehq.org.ru/WINE@Etersoft

Поскольку данная версия продукта лицензируется бесплатно для
частного использования, все вопросы мы рекомендуем обсуждать
на форуме UnixForum

https://unixforum.org/index.php?showforum=58

Пожалуйста, отвечайте на это письмо только
при возникновении затруднений со скачиванием файлов.

$THANKTEXT
EOF
else
	cat >>$FILETO <<EOF

Обязательно ознакомьтесь с известными проблемами в текущей сборке:
https://wiki.etersoft.ru/WINE/knownbugs

Ответы на частые вопросы смотрите на https://etersoft.ru/wine/faq

Прочитайте документацию https://winehq.org.ru/WINE@Etersoft

По вопросам использования продукта пишите новое письмо
на support@etersoft.ru,
указав в теме письма регистрационный номер.

Пожалуйста, отвечайте на это письмо только
при возникновении затруднений со скачиванием файлов.

$THANKTEXT
EOF
fi
	cat >>$FILETO <<EOF

-- 
Команда разработчиков
Etersoft, 2022
EOF
}


# Ошибка: не ловятся ошибки отсюда
prepare_wine_etersoft7_mail()
{
	local FILETO BETA NAME
	FILETO=$1
	>$FILETO
	NAME="$(get_dear_from_fio "$FULLNAME" "покупатель")"
	BETA=""
	# FIXME: is it used?
	if [ "$RELEASECANDIDAT" = "1" ] ; then
		BETA="
!! Это предварительная версия продукта, используйте её с осторожностью !!
!! Устанавливайте в повседневное использование только после проверки !!
!! Создавайте резервные копии !!
"
	fi

CIFSTEXT=""
#if [ "$TYPE" != "Local" ] ; then
#CIFSTEXT=" - пакет для обеспечения сетевого взаимодействия по протоколу CIFS с сервером
#   SAMBA или Windows Server (etercifs) (и dkms-etercifs - только если нужен)
#"
#fi

if [ "$TYPE_LICENSE" = "Demo" ] || [ "$TYPE_LICENSE" = "DemoTerminal" ] ; then
	THANKTEXT="Благодарим Вас за внимание к нашему продукту."
else
	THANKTEXT="Благодарим Вас за покупку!"
fi

	cat >>$FILETO <<EOF
${DEAR} ${NAME}!

Ваш заказ по сборке для системы ${TEXTDIST} Продукта
${PRODUCT}
(релиз $PROJECTVERSION) выполнен.
${BETA}
Регистрационный номер Продукта: ${ETERREGNUM}.

Ссылки для скачивания действительны в течение 4 суток. В любое время вы можете заказать сборку ещё раз, перейдя по ссылке https://sales.etersoft.ru/product/${ETERREGNUM}/email=${MAILTO}

Для получения и установки Продукта вы можете скачать скрипт скачивания и установки wine-etersoft-install.sh:
EOF
printURL "$FTPDIR" "$DOWNLOADDIR/$TYPE-$PROJECTVERSION/$DIST" $FTPDIR/wine-etersoft-install.sh >>$FILETO || fatal "Error with missed wine-etersoft-install.sh "

cat >>$FILETO <<EOF
и запустить его с правами root:
  # bash wine-etersoft-install.sh

Также вы можете скачать файлы вручную и установить согласно документации:
 - пакеты Продукта (wine-etersoft, wine32-etersoft, wine-etersoft-$PRODUCT_name);
 - файл лицензии $LICENSEFILE;
 - файл README.html с базовой информацией о продукте;
$(printURL "$FTPDIR" "$DOWNLOADDIR/$TYPE-$PROJECTVERSION/$DIST" $FTPDIR/README.html)
 - пакеты с драйверами и менеджером лицензий для аппаратных ключей защиты HASP HL (пакет haspd);
$CIFSTEXT

для этого пройдите по ссылке, чтобы загрузить файлы открытой и закрытой части:
	${DOWNLOADDIR}/$TYPE-$PROJECTVERSION/$DIST
EOF

if [ "$TYPE" = "Local" ] ; then
	cat >>$FILETO <<EOF

Обязательно ознакомьтесь с известными проблемами в текущей сборке:
http://wiki.etersoft.ru/WINE/knownbugs

Ответы на частые вопросы смотрите на https://etersoft.ru/wine/faq

Документация доступна здесь: https://winehq.org.ru/WINE@Etersoft/Local

Поскольку данная версия продукта лицензируется бесплатно для
частного использования, все вопросы мы рекомендуем обсуждать
на форуме UnixForum

https://unixforum.org/index.php?showforum=58

Пожалуйста, не отвечайте на это письмо.

$THANKTEXT
EOF
else
	cat >>$FILETO <<EOF

Обязательно ознакомьтесь с известными проблемами в текущей сборке:
https://winehq.org.ru/WINE@Etersoft/knownbugs

Ответы на частые вопросы смотрите на https://etersoft.ru/wine/faq

Документация доступна здесь: https://winehq.org.ru/WINE@Etersoft/Enterprise

По вопросам использования продукта пишите новое письмо
на support@etersoft.ru,
указав в теме письма регистрационный номер.

Пожалуйста, не отвечайте на это письмо.

$THANKTEXT
EOF
fi
	cat >>$FILETO <<EOF

-- 
Команда разработчиков
Etersoft, 2022
EOF
}


# TODO: compare with prepare_license_mail
prepare_wine_etersoft_license_mail()
{
	local FILETO BETA NAME
	FILETO=$1
	>$FILETO
	NAME="$(get_dear_from_fio "$FULLNAME" "покупатель")"
	BETA=""

if [ "$TYPE_LICENSE" = "Demo" ] || [ "$TYPE_LICENSE" = "DemoTerminal" ] ; then
	THANKTEXT="Благодарим Вас за внимание к нашему продукту."
else
	THANKTEXT="Благодарим Вас за покупку!"
fi

	cat >>$FILETO <<EOF
${DEAR} ${NAME}!

Вы заказывали лицензию для Продукта
${PRODUCT} (релиз $PROJECTVERSION)
с регистрационным номером ${ETERREGNUM}.

Файл лицензии можно скачать по следующей ссылке:
EOF

	printURL $FTPDIR $DOWNLOADDIR/$TYPE-$PROJECTVERSION $FTPDIR/$LICENSEFILE >>$FILETO || fatal "Error with license (files are missed) "

cat >>$FILETO <<EOF

Файл лицензии $LICENSEFILE необходимо расположить в одном из следующих каталогов:
/etc/wine, ~/.wine или C:\WINDOWS\INF и проверить права на его чтение пользователями.

Всегда можно заказать сборку или файл лицензии ещё раз по адресу http://sales.etersoft.ru/product/${ETERREGNUM}/email=${MAILTO}

Пожалуйста, отвечайте на это письмо только
при возникновении затруднений с файлом лицензии.

$THANKTEXT
EOF

	cat >>$FILETO <<EOF

-- 
Команда разработчиков
Etersoft, 2022
EOF
}



mail_wine_etersoft_license()
{
	FTPDIR=$TARGETDIR/$TYPE-$PROJECTVERSION

	TARGETDIR="/var/ftp/pub/download/WINE@Etersoft/$TARGETDIRNAME"
	DOWNLOADDIR="$MPROTO://$DOWNLOADDOMAIN/W@E/$TARGETDIRNAME"

	prepare_wine_etersoft_license $FTPDIR/$LICENSEFILE

	TMPMAIL=$(make_temp_file)
	prepare_wine_etersoft_license_mail $TMPMAIL || fatal "Can't prepare letter"

	# Для отправки писем обязательно нужна локаль!
	export LC_ALL=ru_RU.UTF-8
	cat $TMPMAIL | mutt "${FULLMAILTO}" -b "sales-track@etersoft.ru" -s "$ETERREGNUM: Лицензия для продукта $COMPONENTNAME" || fatal "Can't send"
	rm -f $TMPMAIL
}


build_wine_etersoft()
{
	PROJECTNAME="WINE@Etersoft"
	LICENSEFILE="wine-etersoft.lic"
	VERNAME=$PROJECTNAME/$PROJECTVERSION
	TYPE="$(get_product_type "$COMPONENTNAME")"

	TARGETDIR="/var/ftp/pub/download/WINE@Etersoft/$TARGETDIRNAME"
	DOWNLOADDIR="$MPROTO://$DOWNLOADDOMAIN/W@E/$TARGETDIRNAME"

	PUBLOCAL="/var/ftp/pub/Etersoft/$VERNAME"
	KORINFLOCAL="/var/ftp/pub/Korinf"

	if [ -n "$LICENSEONLY" ] ; then
		mail_wine_etersoft_license
		return
	fi

	# Use real path if possible
	if [ -L "$PUBLOCAL" ] ; then
		PUBLOCAL=`readlink -f "$PUBLOCAL"`
		VERNAME=$PROJECTNAME/`basename $PUBLOCAL`
	fi

	# Not: use original project version (other path, not pub)
	PVTLOCAL="/var/ftp/pvt/Etersoft/$PROJECTNAME/$PROJECTVERSION/WINE-$TYPE"

	# Lav 28.06.11: skip checking for previous built one
	#if [ ! -d "$PUBLOCAL/WINE/$DIST" ] ; then
	#	warning "System $DIST not supported for build ($PUBLOCAL/WINE/$DIST does not exist)"
	#	do_broken
	#fi

	TEXTDIST=$DIST
	# Check for linked system (собираем для основной системы),
	if [ -L "$PUBLOCAL/WINE/$DIST" ]; then
		local NEWDIST
		NEWDIST=`readlink $PUBLOCAL/WINE/$DIST | sed -e "s|\.\./||g"`
		# Если из ссылки не пропала архитектура
		if [ "${DIST/x86_64/}" = "${NEWDIST/x86_64/}" ] ; then
			DIST=$NEWDIST
			TEXTDIST="$TEXTDIST (фактически сборка выполнена для $DIST)"
		fi
	fi
	check_dist $DIST
	mkdir -p "$PVTLOCAL/$DIST"
	
	PUBDOWNLOAD1FONTS="$MPROTO://$DOWNLOADDOMAIN/pub/Etersoft/$VERNAME/fonts/$DIST"
	#[ -d "$PUBLOCAL/fonts/$DIST/" ] || fatal "Can't locate fonts dir fonts/$DIST"

	export FTPDIR=$TARGETDIR/$TYPE-$PROJECTVERSION/$DIST

	prepare_wine_etersoft

	TMPMAIL=$(make_temp_file)
	if echo "$PROJECTVERSION" | grep "^[7]" ; then
		prepare_wine_etersoft7_mail $TMPMAIL || fatal "Can't prepare letter"
	else
		prepare_wine_etersoft_mail $TMPMAIL || fatal "Can't prepare letter"
	fi
	# Для отправки писем обязательно нужна локаль!
	export LC_ALL=ru_RU.UTF-8
	cat $TMPMAIL | mutt "${FULLMAILTO}" -b "sales-track@etersoft.ru" -s "$ETERREGNUM: Сборка $COMPONENTNAME для ${TEXTDIST}" || fatal "Can't send"
	rm -f $TMPMAIL
}


#!/bin/sh -x
##
#  Korinf project
#
#  Publish product functions
#
#  Copyright (c) Etersoft <http://etersoft.ru> 2006, 2007, 2009, 2013
#  Copyright (c) Vitaly Lipatov <lav@etersoft.ru> 2006, 2007, 2009, 2013
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.

#  You should have received a copy of the GNU Affero General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
##

# arg: src.rpm target_file
# Check if target is older then src.rpm and build if needed

# is not recommended include directly due message function intersection
#kormod korinf

kormod check_integrity status


# Args: BUILDSCRIPTDIR   PRODPATH                     BUILDNAME  [PRVERSION]
# Example: bin-etercifs  /var/.../WINE@Etersoft/CIFS  etercifs   5.4.7
check_and_refresh_component()
{
	assert_var DIST
	local BUILDSCRIPTDIR="$1"
	# Etersoft/RX@Etersoft/last
	local PRODPATH="$2"
	# Etersoft/RX@Etersoft/last/sources
	local SOURCEPATH="$(get_sources_dir "$PRODPATH")"
	# haspd
	local BUILDNAME=$3
	local PRVERSION=$4

	# hack
	if [ -z "$PRVERSION" ] ; then
		# get PROJECT version from SOURCEPATH
		PRVERSION=$(basename $(dirname $SOURCEPATH) )
	fi

	# FIXMEP get_..._package always returns true
	local SRCRPM=$(get_src_package "$SOURCEPATH" $BUILDNAME)
	test -r "$SRCRPM" || fatal "Source package for $BUILDNAME is not found"
	local BINPKG=$(get_bin_package "$PRODPATH/$DIST" $BUILDNAME)

	# if binary is exists
	if [ -r "$BINPKG" ] ; then
		# if binary is newer than src.rpm
		if [ "$BINPKG" -nt "$SRCRPM" ] ; then
			check_pkg_integrity "$BINPKG" && return 0
			warning "Package $BINPKG is broken, removing"
			rm -vf "$BINPKG"
		fi
	fi

	# needed for autobuild_failed
	DESTDIR=$PRODPATH/$DIST
	if [ -z "$FORCEBUILD" ] ; then
		is_autobuild_failed && fatal "Package $BUILDNAME need rebuild from $SRCRPM, but already was failed"
	fi

	$AROBOTDIR/../$BUILDSCRIPTDIR/$BUILDNAME.sh -f $DIST $PRVERSION && return 0

	set_autobuild_failed
	fatal "Package $BUILDNAME cannot rebuild from $SRCRPM"
	return 1
}

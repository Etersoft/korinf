#!/bin/sh -x
##
#  Korinf project
#
#  Publish product functions
#
#  Copyright (c) Etersoft <http://etersoft.ru> 2006, 2007, 2009
#  Copyright (c) Vitaly Lipatov <lav@etersoft.ru> 2006, 2007, 2009
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.

#  You should have received a copy of the GNU Affero General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
##

# Выполняет сборку по первому заказу в списке
# Отправляет на реальный адрес только с параметром --real /путь
# Также отладку можно включить, создав файл arobot.sh.debug
# (c) Etersoft
# 08.06.2006, 09.06.06, 28.02.07, 09.03.07, 15.12.07, 2008
# FIXME: если в имени запятая, разделяет на два адреса
#

kormod status

exit_now()
{
	[ -n "$1" ] && exit $1 || exit 0
}

# TODO: add URL checking (touch it via GET?)
printURL()
{
	local FILE
	local LDIR="$1"
	local DDIR="$2"
	shift
	shift
	[ -n "$1" ] || return 1
	for i in $@ ; do
		FILE=`basename $i`
		# Размер файла в байтах
		test -r "$LDIR/$FILE" || fatal "can't open $LDIR/$FILE"
		FSIZE=`stat "--printf=%s" $LDIR/$FILE || echo 0`
		let KSIZE=$FSIZE/1024
		[ "$KSIZE" -lt "1" ] && KSIZE=1
		# disable size print for clean link
		#printf "[ %5d Кб]  " $KSIZE
		echo $DDIR/$FILE
	done
	return 0
}

# TODO: add URL checking (touch it via GET?)
printHTMLURL()
{
	local FILE
	local LDIR="$1"
	local DDIR="$2"
	shift
	shift
	[ -n "$1" ] || return 1
	echo "<ul>";
	for i in $@ ; do
		FILE=`basename $i`
		# Размер файла в байтах
		test -r "$LDIR/$FILE" || fatal "can't open $LDIR/$FILE"
		FSIZE=`stat "--printf=%s" $LDIR/$FILE || echo 0`
		let KSIZE=$FSIZE/1024
		[ "$KSIZE" -lt "1" ] && KSIZE=1
		echo -n "<li> "
		echo "<a href=$DDIR/$FILE>$FILE</a>"
		printf "([ %5d Кб])" $KSIZE
		echo "</li>"
	done
	echo "</ul>";
	return 0
}


check_dist()
{
	get_distro_list $(get_target_list ALL) | grep -q "$1" && return
	warning "Destination $1 is not supported for build (missed in '$REBUILDLIST')"
	do_broken
}

# Check for package in target path
assert_present_package()
{
	local BUILDNAME=$2
	local FILENAME

	local DESTDIR=$1

	FILENAME=$(get_bin_package "$DESTDIR" $BUILDNAME)

	if [ ! -r "$FILENAME" ] ; then
		fatal "Package $BUILDNAME is missed in $DESTDIR"
	fi

	if is_autobuild_failed ; then
		fatal "Note! autobuild.failed for $BUILDNAME is present"
	fi

	if is_build_failed ; then
		fatal "Note! build.failed for $BUILDNAME is present"
	fi
}

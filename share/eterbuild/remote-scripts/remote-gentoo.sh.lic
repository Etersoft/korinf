#!/bin/bash
# 2007 (c) Etersoft http://etersoft.ru
# Author: Lunar Child <luch@etersoft.ru>
# GNU Public License
#
#

# например, wine-etersoft
PACKAGE="$1"
# например, 1.0.8
WINENUMVERSION="$2"
# например, network
# например, EEEE-C0DE
ETERREGNUM="$3"
BASEURL=$4
BUILDSRPM=$5
SRPM=`basename $BUILDSRPM`
PATCH="/usr/bin/patch"
WGET="/usr/bin/wget"
PATH="/usr/bin:/usr/local/bin:/bin:"
TMPPATH="/tmp/wine"
MAKE="make -j2"
ARCH=`arch`

BASEVER="1.0.9" #hack for error in publish tarballs
if [ $WINENUMVERSION = 'current' ] ; then
    WINENUMVERSION=$BASEVER
fi

export PACKAGE
PRODUCT=`echo $PACKAGE | sed 's/wine-etersoft-\(.*\)/\1/g'`
echo "We get $PRODUCT to build"

pack_pkg() {
	if [ "$1" = "wine-etersoft-public" ] ; then
	    bzip2 -9 $TMPPATH/ready/$1-"$VER"_"$RELEASE".$ARCH.tar.bz2
	else
	    bzip2 -9 $TMPPATH/ready/$1-"$WINENUMVERSION"_"$RELEASE".$ARCH.tar.bz2
	fi
}

upack_src() {
    tar xjf $1.tar.bz2
}

get_source() {
    $WGET $BASEURL/sources/$SRPM
    rpm2cpio $SRPM > $PACKAGE.cpio
    cpio -d -i < $PACKAGE.cpio
}
#################################################################
#				BODY				#
#################################################################
##############################WINE-ETERSOFT######################

# Подготовка необходимых путей.
rm -rf $TMPPATH/*
mkdir $TMPPATH/
cd $TMPPATH/
DESTDIR="$TMPPATH/$PACKAGE"
##############################WINE-PUBLIC########################
if [ "$PACKAGE" = "wine-etersoft-public" ] ; then
    #Качаем исходники и распаковываем.
    echo "Building $PACKAGE from $BASEURL"
    get_source
    VER=`cat wine.spec | grep Version | sed 's/Version: //g'`
    RELEASE=`cat wine.spec | grep Release | sed 's/Release: alt//g'`
    upack_src wine-$VER || exit 1
    upack_src $PACKAGE-$VER || exit 1
    #патчим wine.
    cd wine-$VER
    $PATCH -p0 < etersoft/wine-etersoft.patch
   #Компилируем wine.
    echo "$MAKE wine with patches"
    ./configure --prefix=/usr || exit 1
    $MAKE depend || exit 1
    $MAKE || exit 1
    mkdir -p $DESTDIR
    echo "$MAKE install to $DESTDIR"
    $MAKE install DESTDIR="$DESTDIR" || exit 1
    echo "$MAKE install ETERSOFT WINE utils to $DESTDIR"
    cd $TMPPATH/wine-$VER/etersoft
    $MAKE install prefix=$DESTDIR/usr initdir=$DESTDIR/etc/init.d sysconfdir=$DESTDIR/etc MKDIRPROG='mkdir -p' || exit 1
    pack_pkg $PACKAGE
else
##############################WINE-PVT###########################
    echo "Building $PACKAGE from $BASEURL"
    get_source
    upack_src $PACKAGE-$WINENUMVERSION
    RELEASE=`cat $PACKAGE.spec | grep Release | sed 's/Release: alt//g'`
# Компилируем.
    cd $PACKAGE-$WINENUMVERSION
    ./configure --prefix=/usr --sysconfdir=/etc --with-$PRODUCT --with-regnum=$ETERREGNUM || exit 1
    $MAKE || exit 1
    mkdir -p $DESTDIR
    echo "$MAKE install to $DESTDIR"
    $MAKE install DESTDIR="$DESTDIR" initdir="$DESTDIR/etc/init.d" || exit 1
# Готовимся к созданию пакета (генерим необходимые файлы)
    pack_pkg $PACKAGE
fi

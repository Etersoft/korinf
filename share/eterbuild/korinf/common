#!/bin/bash
# 2005, 2006, 2007, 2008 (c) Etersoft http://etersoft.ru
# Author: Vitaly Lipatov <lav@etersoft.ru>
# GNU Public License version 3
#
# Собирает пакеты для перечисленных в rebuild.list систем и копирует сборки на место.
# Пакеты собираются из опубликованных подписанных исходников
# use with builder user
# Req: etersoft-build-utils >= 1.6, alien >= 8.63

# FIXME: do not support subdirs
# make link to etersoft-build-utils repository to get run from the source tree
# load common functions, compatible with local and installed script
. `dirname $0`/../share/eterbuild/functions/common

KORINFETC=/etc/eterbuild
KORINFDIR=/usr/share/eterbuild

# if run from local installation
if ! dirname $0 | grep ^/usr/share >/dev/null ; then
	KORINFDIR=$(realpath `dirname $0`/../share/eterbuild)
	KORINFETC=$(realpath `dirname $0`/../etc)
	#echo "Note: run from source tree, datadir=$KORINFDIR, sysconfdir=$KORINFETC"
fi


# Try to set clear environment
LC_ALL=C
unset DISPLAY

test `hostname` = builder.office.etersoft.ru || warning "It is tested only at Etersoft builder host!"

fatal()
{
	echo "FATAL: $@" >&2
	[ -n "$MOUNT_MODULE_INCLUDED" ] && end_umount
	# disable trap before exit
	trap - EXIT
	exit 1
}

warning()
{
	echo "WARNING: $@" >&2
#	continue
	echo "`date` $dist WARNING: $@" | write_report
	if [ -n "$CAREBUILD" ] ; then
		[ -n "$MOUNT_MODULE_INCLUDED" ] && end_umount
		# disable trap before exit
		trap - EXIT
		exit 1
	fi
}

kormod()
{
	local i
	for i in $@ ; do
		. $KORINFDIR/korinf/$i
	done
}

kormod_build()
{
	local i
	for i in $@ ; do
		. $KORINFDIR/korinf/build/build-$i.sh
	done
}

# Returns the newest package from the pkg list (without extension .src.rpm)
last_rpm()
{
	local i
	local lastrpm
	local pkgver
	lastrpm="___________"
	for i in `cat` ; do
		pkgver=`rpm -qp $i`
		#echo "Compare $pkgver $lastrpm "
		LR=`rpmvercmp $pkgver $lastrpm `
		#echo "RES=$LR"
		#LR=$?
		if [ $LR -gt 0 ] ; then
			lastrpm=$pkgver
		fi
	done
	echo $lastrpm
}

# get distro list from arg/directory/file
get_distro_list()
{
	local LIST

	# get list from directory
	if [ -d "$1" ] ; then
		LIST="$1/distro.list"
		if [ ! -r "$LIST" ] ; then
			fatal "get_distro_list: $LIST is not found"
		fi
	# get list from file
	elif [ -r "$1" ] ; then
		LIST="$1"
	# list in the variable
	else
		echo "$@"
		return
	fi
	cat "$LIST" | grep -v "^#" | sort | sed -e "s|[ 	].*||g"

}

kormod config log

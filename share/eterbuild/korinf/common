#!/bin/bash
##
#  Korinf project
#
#  Common functions
#
#  Copyright (c) Etersoft <http://etersoft.ru> 2005-2009
#  Copyright (c) Vitaly Lipatov <lav@etersoft.ru> 2009
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU Affero General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.

#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU Affero General Public License for more details.

#  You should have received a copy of the GNU Affero General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
##


# Load etersoft-build-utils part
LOCETERBUILDDIR=`dirname $0`/../share/eterbuild/functions
RELETERBUILDDIR=../../etersoft-build-utils/share/eterbuild/functions

# Create link to etersoft-build-utils repo if not exists
if [ ! -d "$LOCETERBUILDDIR" ] ; then
	if [ ! -d "`dirname $0`/$RELETERBUILDDIR" ] ; then
		echo "Checkout etersoft-build-utils repository to the same directory as korinf checkouted" >&2
		exit 1
	else
		rm -f $LOCETERBUILDDIR
		ln -s ../$RELETERBUILDDIR $LOCETERBUILDDIR
	fi
fi
. $LOCETERBUILDDIR/common



KORINFETC=/etc/eterbuild
KORINFDIR=/usr/share/eterbuild

# if run from local installation
if ! dirname $0 | grep ^/usr/share >/dev/null ; then
	KORINFDIR=$(readlink -f `dirname $0`/../share/eterbuild)
	KORINFETC=$(readlink -f `dirname $0`/../etc)
	if [ -r "$KORINFETC/../AUTHORS" ] ; then
		if [ -n "$VERBOSE" ] ; then
			echo "Note: run from source tree, datadir=$KORINFDIR, sysconfdir=$KORINFETC"
		fi
	else
		KORINFETC=/etc/eterbuild
		KORINFDIR=/usr/share/eterbuild
	fi
fi


# Try to set clear environment
LC_ALL=C
unset DISPLAY

test `hostname` = builder.office.etersoft.ru || warning "It is tested only at Etersoft builder host!"

fatal()
{
	echo "FATAL: $@" >&2
	[ -n "$MOUNT_MODULE_INCLUDED" ] && end_umount
	# disable trap before exit
	trap - EXIT
	exit 1
}

warning()
{
	echo "WARNING: $@" >&2
#	continue
	echo "`date` $dist WARNING: $@" | write_report
	if [ -n "$CAREBUILD" ] ; then
		[ -n "$MOUNT_MODULE_INCLUDED" ] && end_umount
		# disable trap before exit
		trap - EXIT
		exit 1
	fi
}

kormod()
{
	local i
	for i in $@ ; do
		. $KORINFDIR/korinf/$i
	done
}

kormod_build()
{
	local i
	for i in $@ ; do
		. $KORINFDIR/korinf/build/build-$i.sh
	done
}

# Returns the newest package from the pkg list (without extension .src.rpm)
last_rpm()
{
	local i
	local lastrpm
	local pkgver
	lastrpm="___________"
	for i in `cat` ; do
		pkgver=`rpm -qp $i`
		#echo "Compare $pkgver $lastrpm "
		LR=`rpmvercmp $pkgver $lastrpm `
		#echo "RES=$LR"
		#LR=$?
		if [ $LR -gt 0 ] ; then
			lastrpm=$pkgver
		fi
	done
	echo $lastrpm
}

# get distro list from arg/directory/file
# from DIR/distro.list if arg is dir
# from FILE if arg is file name
# from ARG if arg is list
get_distro_list()
{
	local i
	local LIST
	local DIR

	# get list from directory
	if [ -d "$1" ] ; then
		LIST="$1/distro.list"
		if [ ! -r "$LIST" ] ; then
			fatal "get_distro_list: $LIST is not found"
		fi
		DIR=$1
	# get list from file
	elif [ -r "$1" ] ; then
		LIST="$1"
		DIR=`dirname $1`
	# list in the variable
	else
		echo "$@"
		return
	fi

	cat "$LIST" | grep -v "^#" | grep -v "^\." | sed -e "s|[ 	].*||g" | grep -v "^\$"
	# get list included files
	LIST=`cat "$LIST" | grep "^\." | sed -e "s|^\. ||g"`
	for i in $LIST ; do
		test -f "$i" || continue
		get_distro_list $DIR/$i
	done
}

kormod config log

#!/bin/sh
##
#  Korinf project
#
#  Main korinf script for build packages
#
#  Copyright (c) Etersoft <http://etersoft.ru> 2005-2009
#  Copyright (c) Vitaly Lipatov <lav@etersoft.ru> 2009
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
##

# Example in the three lines:
#  kormod korinf
#  export REBUILDLIST=Fedora/10
#  build_package your-package-name


kormod main


# build binary packages according to REBUILDLIST
# arg: package_name [HELPER]
build_package()
{
	# FIXME: for compatibility
	set_log_dir

	#echo
	#echo "=============================================== "
	echo | write_report

	local BUILDNAME
	test -n "$1" && BUILDNAME=$1 || fatal "Missed build_rpm param"

	# disable changelog editing
	export EDITOR=

	MAINFILESLIST=$MAINFILES
	EXTRAFILESLIST=$EXTRAFILES

	# Use default value for simple backward compatibility
	if [ -z "$MAINFILESLIST$EXTRAFILESLIST" ] ; then
		if [ "$2" = "HELPER" ] ; then
			EXTRAFILESLIST="${BUILDNAME}"
		else
			MAINFILESLIST="${BUILDNAME}"
		fi
	fi

	echo "Build $BUILDNAME package"
	echo "Source dir: $SOURCEPATH"
	echo "Target dir: $TARGETPATH"

	if [ -z "$SOURCEPATH" ] || [ -z "$TARGETPATH" ] ; then
		fatal "Source or target path is not set"
	fi

	main_build
}


# build source packages according to REBUILDLIST
# args: package_name
build_srcrpm()
{
	MAKESPKG=1
	build_package $@
}

# Set REBUILDLIST according TARGETPATH, existing REBUILDLIST and some heruistic
set_rebuildlist()
{
	if [ -n "$REBUILDLIST" ] ; then
		if [ -r "$KORINFETC/lists/$REBUILDLIST" ] ; then
			REBUILDLIST=$KORINFETC/lists/$REBUILDLIST
			echo "Build for distros from $REBUILDLIST"
		else
			echo "Build for $REBUILDLIST"
		fi
	elif [ -n "$TARGETPATH" ] ; then
		if [ -r "$TARGETPATH/distro.list" ] ; then
			REBUILDLIST=$TARGETPATH/distro.list
			echo "Build according to distro.list from $TARGETPATH"
		else
			REBUILDLIST=$KORINFETC/lists/all
			echo "Build for distros from $REBUILDLIST"
		fi
	fi
}

# args: 1) path to project dir (where versions) 2) package name [3) target subdir ] [ 4) other project version ]
build_project()
{
	local SP
	if [ -z "$4" ] ; then
		SP=$1/last
	else
		SP=$1/$4
	fi

	TARGETPATH=$(realpath $SP)
	SOURCEPATH=$TARGETPATH/sources

	[ -n "$TARGETPATH" ] || fatal "Cannot find $SP, check it"
	[ -z "$3" ] || TARGETPATH=$TARGETPATH/$3

	set_rebuildlist

	build_package $2
}
